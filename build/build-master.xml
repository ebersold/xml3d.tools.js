<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2010-2014
DFKI - German Research Center for Artificial Intelligence
www.dfki.de

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->
<project name="master" default="deploy">
    <macrodef name="git">
        <attribute name="command" />
        <attribute name="git" default="${git.cmd}" />
        <attribute name="dir" default="" />
        <element name="args" optional="true" />
        <sequential>
            <echo message="@{git} @{command}" />
            <exec executable="@{git}" dir="@{dir}" outputproperty="git.output">
                <arg value="@{command}" />
                <args />
            </exec>
        </sequential>
    </macrodef>

    <macrodef name="upload" description="Upload a file to standard URL">
        <attribute name="extension"/>
        <sequential>
            <fail unless="upload.url"/>
            <post-file file="${buildDir}/${script.start}@{extension}.js" url="${upload.url}"/>
        </sequential>
    </macrodef>

    <macrodef name="post-file" description="Use Curl to post the file to the WEBDAV path">
        <attribute name="file" />
        <attribute name="url" />
        <sequential>
            <echo message="Using CURL to upload @{file} to @{url}" />
            <!--Execute curl to post the file to the URL -->
            <exec executable="${curl.path}">
                <arg value="-n" />
                <arg value="-s" />
                <arg value="-T" />
                <arg value='@{file}' />
                <arg value='@{url}' />
            </exec>
        </sequential>
    </macrodef>

    <!-- = = = = = = = = = = = = = = = = = macrodef: concatScripts = = = = =
        = = = = = = = = = = = = -->
    <macrodef name="concatScripts">
        <attribute name="extension" default="" />
        <attribute name="version" />
        <sequential>
            <property name="finalScript" value="${buildDir}/${script.start}@{extension}.js" />

            <concat destfile="${finalScript}">
                <header>/*${line.separator}</header>
                <fileset file="${basedir}/../LICENSE" />
                <footer>${line.separator}@version: @{version} ${line.separator}*/
                    ${line.separator}</footer>
            </concat>

            <concat destfile="${finalScript}" eol="unix" append="true">
                <filelist refid="sourceFiles" />
            </concat>

            <replaceregexp file="${finalScript}" match="xml3d.webgl.checkError\("
                replace="//xml3d.webgl.checkError\(" byline="true" />
            <replaceregexp file="${finalScript}" match="%VERSION%"
                replace="@{version}" byline="true" />
        </sequential>
    </macrodef>

    <macrodef name="compileScripts">
        <attribute name="extension" default="-min" />
        <attribute name="level" default="simple" />
        <attribute name="version" />
        <element name="args" optional="true" />
        <sequential>
            <property name="finalScript" value="${buildDir}/${script.start}@{extension}.js" />
            <property name="mintmp" value="${buildDir}/mintmp" />
            <property name="licensetmp" value="${buildDir}/licensetmp" />

            <!-- minification -->
            <jscomp compilationlevel="@{level}" warning="verbose"
                generateexports="yes" debug="false"
                output="${mintmp}">
                <args/>
                <externs refid="externs">
                </externs>
                <sources refid="sourceFiles">
                </sources>
            </jscomp>
            <!-- license -->
            <concat destfile="${licensetmp}">
                <header>/*${line.separator}</header>
                <fileset file="${basedir}/../LICENSE" />
                <footer>${line.separator}@version: @{version} ${line.separator}*/
                    ${line.separator}</footer>
            </concat>
            <!-- concat license and minified version -->
            <concat destfile="${finalScript}">
                <filelist files="${licensetmp},${mintmp}" />
            </concat>
            <delete>
                <filelist files="${licensetmp},${mintmp}" />
            </delete>
            <!-- set version -->
            <replaceregexp file="${finalScript}" match="%VERSION%"
                           replace="@{version}" byline="true" />
        </sequential>
    </macrodef>

    <target name="clean">
        <delete dir="${buildDir}">
        </delete>
    </target>

    <target name="checkOS">
        <condition property="isWindows">
            <os family="windows" />
        </condition>
        <condition property="isLinux">
            <os family="unix" />
        </condition>
    </target>

    <target name="windowsGit" depends="checkOS" if="isWindows">
        <property name="git.cmd" value="git.cmd" />
    </target>
    <target name="linuxGit" depends="checkOS" if="isLinux">
        <property name="git.cmd" value="git" />
    </target>

    <taskdef name="jscomp" classname="com.google.javascript.jscomp.ant.CompileTask"
        classpath="./closure/compiler.jar" />

    <target name="init" depends="init-properties, clean" />

    <target name="init-properties">
    </target>

    <target name="compile" depends="init">
        <javac srcdir="${source.dir}" destdir="${build.dir}/classes">
            <classpath refid="build.classpath" />
        </javac>
    </target>
    <target name="deploy" />
</project>
